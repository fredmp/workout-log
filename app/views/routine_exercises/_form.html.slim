= simple_form_for [@routine, @routine_exercise], html: { class: 'form-horizontal' } do |f|
  div.input-fields
    = f.error_notification
    = f.input :exercise_categories, label: t(:categories, scope: [:exercises])
      br
      = select_tag :exercise_category_id, options_from_collection_for_select(current_user.exercise_categories, :id, :name), include_blank: t(:all, scope: [:categories]), class: 'categories-add-set'
    = f.input :body_parts, label: t(:plural_capitalized, scope: [:body_parts])
      br
      = select_tag :body_part_id, options_from_collection_for_select(current_user.body_parts, :id, :name), include_blank: t(:all, scope: [:body_parts]), class: 'body-parts-add-set'
    = f.input :exercise, label: t(:plural_capitalized, scope: [:exercises])
      br
      = f.select :exercise_id, options_for_select(@exercises.map { |e| [e.name, e.id, { 'data-fields' => e.available_fields_definition, 'data-category' => e.exercise_category_id, 'data-body-parts' => e.body_part_ids }] }, @routine_exercise.exercise_id), { prompt: 'Choose an exercise' }, class: 'dropdown-toggle'
    div.units
      div.weight-unit
        = label_tag :weight_unit, t(:unit_of_weight, scope: [:common])
        = f.select :weight_unit, options_for_select(Settings::WEIGHT_MEASURE_UNITS.map { |unit_key, unit_value| [unit_value[:abbrev], unit_key] }, (@routine_exercise.weight_unit || current_user.weight_unit))
      div.length-unit
        = label_tag :length_unit, t(:unit_of_length, scope: [:common])
        = f.select :length_unit, options_for_select(Settings::LENGTH_MEASURE_UNITS.map { |unit_key, unit_value| [unit_value[:abbrev], unit_key] }, (@routine_exercise.length_unit || current_user.length_unit))
    = f.input :sets
      div.links
        = link_to_add_association "#{t(:add, scope: [:common])} #{t(:set, scope: [:common])}", f, :exercise_sets, partial: 'exercise_sets/fields', class: 'btn btn-info'
        = f.simple_fields_for :exercise_sets do |set|
          = render 'exercise_sets/fields', f: set
  = f.button :submit, "#{@routine_exercise.persisted? ? t(:update, scope: [:common]) : t(:add, scope: [:common])} #{t(:singular_capitalized, scope: [:exercises])}", class: 'btn btn-primary btn-main-action'
  = link_to t(:delete, scope: [:common]), routine_routine_exercise_path(@routine, @routine_exercise), method: :delete, data: { confirm: t(:are_you_sure, scope: [:common]) }, class: 'btn btn-danger btn-main-action btn-remove-exercise' if @routine_exercise.persisted?
